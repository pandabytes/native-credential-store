<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup>
    <DockerCredentialHelperVersion>v0.8.0</DockerCredentialHelperVersion>
    <DockerCredentialHelperBaseUrl>https://github.com/docker/docker-credential-helpers</DockerCredentialHelperBaseUrl>
    <DownloadUrl>$(DockerCredentialHelperBaseUrl)/releases/download/$(DockerCredentialHelperVersion)</DownloadUrl>
    <ToolsFolder>$([System.IO.Path]::Combine('tools', 'docker-credential-helper', $(DockerCredentialHelperVersion)))</ToolsFolder>
  </PropertyGroup>

  <!-- Determine which binary to use based on the OS platform -->
  <!-- https://github.com/dotnet/msbuild/issues/2468#issuecomment-324694593 -->

  <!-- Windows -->
  <Target Name="DownloadWindowFiles" BeforeTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-wincred-$(DockerCredentialHelperVersion).windows-amd64.exe"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-wincred-$(DockerCredentialHelperVersion).windows-arm64.exe"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <!-- Copy all downloaded exe files to bin path -->
    <ItemGroup>
      <Content Include="$(ToolsFolder)\**" CopyToOutputDirectory="PreserveNewest"/>
    </ItemGroup>
  </Target>

  <!-- Linux -->
  <!-- Linux users must install and configure "pass"/"secretservice" -->
  <Target Name="DownloadLinuxFiles" BeforeTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <!-- Pass credential -->
    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-pass-$(DockerCredentialHelperVersion).linux-amd64"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-pass-$(DockerCredentialHelperVersion).linux-arm64"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-pass-$(DockerCredentialHelperVersion).linux-armv6"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-pass-$(DockerCredentialHelperVersion).linux-armv7"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-pass-$(DockerCredentialHelperVersion).linux-ppc64le"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-pass-$(DockerCredentialHelperVersion).linux-s390x"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <!-- Secret service -->
    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-secretservice-$(DockerCredentialHelperVersion).linux-amd64"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-secretservice-$(DockerCredentialHelperVersion).linux-arm64"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-secretservice-$(DockerCredentialHelperVersion).linux-armv6"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-secretservice-$(DockerCredentialHelperVersion).linux-armv7"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-secretservice-$(DockerCredentialHelperVersion).linux-ppc64le"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-secretservice-$(DockerCredentialHelperVersion).linux-s390x"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <!-- Add executable permission to all downloaded files -->
    <Exec Command="chmod +x $(ToolsFolder)/*"/>

    <!-- Copy all downloaded exe files to bin path -->
    <ItemGroup>
      <Content Include="$(ToolsFolder)/**" CopyToOutputDirectory="PreserveNewest"/>
    </ItemGroup>
  </Target>

  <!-- Mac -->
  <Target Name="DownloadMacFiles" BeforeTargets="BeforeBuild" Condition="$([MSBuild]::IsOSPlatform('macOS'))">
    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-osxkeychain-$(DockerCredentialHelperVersion).darwin-amd64"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <DownloadFile
        ContinueOnError="WarnAndContinue"
        SourceUrl="$(DownloadUrl)/docker-credential-osxkeychain-$(DockerCredentialHelperVersion).darwin-arm64"
        DestinationFolder="$(ToolsFolder)">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
    </DownloadFile>

    <!-- Add executable permission to all downloaded files -->
    <Exec Command="chmod +x $(ToolsFolder)/*"/>

    <!-- Copy all downloaded exe files to bin path -->
    <ItemGroup>
      <Content Include="$(ToolsFolder)/**" CopyToOutputDirectory="PreserveNewest"/>
    </ItemGroup>
  </Target>

  <!-- Custom attribute to store metadata for C# code to access -->
  <ItemGroup>
    <AssemblyAttribute Include="NativeCredentialStore.Platform.DockerCredentialHelperMetadataAttribute">
      <_Parameter1>$(DockerCredentialHelperVersion)</_Parameter1>
      <_Parameter2>$(ToolsFolder)</_Parameter2>
    </AssemblyAttribute>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" PrivateAssets="all" />
  </ItemGroup>

</Project>
