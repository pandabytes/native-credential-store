name: CI for NativeCredentialStore

on: [push, pull_request]

jobs:
  macos-amd64-call-dotnet-workflow:
    name: Build on Mac (Intel)
    uses: pandabytes/native-credential-store/.github/workflows/dotnet-build-test.yml@master
    with:
      runs_on: macOS-latest
      test_filter: "\"Platform=All|Platform=MacOS\""

  windows-call-dotnet-workflow:
    name: Build on Windows
    uses: pandabytes/native-credential-store/.github/workflows/dotnet-build-test.yml@master
    with:
      runs_on: windows-latest
      test_filter: "\"Platform=All|Platform=Windows\""

  ubuntu-pass-service:
    # Instruction to setup pass are from here
    # https://github.com/docker/docker-credential-helpers/issues/102#issuecomment-388634452
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    env:
      USER_ID: johndoe
    steps:
      - name: Check out branch  
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
      - name: Build only source project (Release)
        # Build the project first so that it can download the exe,
        # and then we "insert" these exe into "pass"
        run: dotnet build src/NativeCredentialStore.csproj -c Release
      - name: Install gpg and pass
        run: sudo apt-get update && sudo apt install gpg pass -y
      - name: Generate GPG key
        # Since this is run in a noninteractive environment,
        # we skip providing a passphrase. In practice, we
        # should always provide a passphrase to be more secure
        run: gpg --batch --passphrase '' --quick-gen-key $USER_ID default default
      - name: Get GPG id
        # sed is to grab the 2nd line
        # xargs is to trim whitespace
        run: echo "GPG_ID=$(gpg -k $USER_ID | sed -n 2p | xargs)" >> "$GITHUB_ENV"
      - name: Initialize pass
        run: pass init $GPG_ID
      - name: Add docker credential to pass
        run: >
          for file in $(find src/contentFiles -type f); do
            echo "pass inserting $file"
            echo "pass is initialized" | pass insert --echo $file
          done
      - name: Run tests (Release)
        run: dotnet test -c Release --filter "\"Platform=All|Platform=Linux\""

  release-nuget-package:
    name: Release nuget package
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
      - macos-amd64-call-dotnet-workflow
      - windows-call-dotnet-workflow
      - ubuntu-pass-service
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
      - name: Verify commit exists in origin/master
        run: >
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/* &&
          git branch --remote --contains | grep origin/master
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Build
        run: dotnet build -c Release "/p:Version=${VERSION};DownloadAll=true"
      - name: Pack library
        run: dotnet pack --no-build -c Release --output . /p:Version=${VERSION}
      - name: Push
        run: dotnet nuget push NativeCredentialStore.${VERSION}.nupkg --source $NUGET_SOURCE --api-key $API_KEY
        env:
          NUGET_SOURCE: https://api.nuget.org/v3/index.json
          API_KEY: ${{ secrets.NUGET_API_KEY }}
